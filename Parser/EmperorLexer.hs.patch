--- ./EmperorLexer.hs.orig	2019-08-21 14:16:11.685947777 +0200
+++ ./EmperorLexer.hs	2019-08-21 14:16:11.689947798 +0200
@@ -364,9 +364,12 @@
 -- and column of a token within the file. `start_pos' gives the position of the
 -- start of the file and `eof_pos' a standard encoding for the end of file.
 -- `move_pos' calculates the new position after traversing a given character,
--- assuming the usual eight character tab stops.
+-- assuming four character tab stops.


+-- | Constructor to represent the position of a token in code.
+-- Format: current line, current character on line, current total character over
+-- all lines
 data AlexPosn = AlexPn !Int !Int !Int
         deriving (Eq,Show)

@@ -395,7 +398,7 @@
     }

 -- Compile with -funbox-strict-fields for best results!
-
+-- | Function to run the generated lexer
 runAlex :: String -> Alex a -> Either String a
 runAlex input__ (Alex f)
    = case f (AlexState {alex_pos = alexStartPos,
@@ -408,6 +411,7 @@
                         alex_scd = 0}) of Left msg -> Left msg
                                           Right ( _, a ) -> Right a

+-- | State information for an Alex lexer
 newtype Alex a = Alex { unAlex :: AlexState -> Either String (AlexState, a) }

 instance Functor Alex where
@@ -439,6 +443,7 @@
  = Alex $ \s -> case s{alex_pos=pos,alex_chr=c,alex_bytes=bs,alex_inp=inp__} of
                   state__@(AlexState{}) -> Right (state__, ())

+-- | Function to return an Alex error state
 alexError :: String -> Alex a
 alexError message = Alex $ const $ Left message

@@ -533,7 +538,7 @@
 -- For compatibility with previous versions of Alex, and because we can.

 alex_tab_size :: Int
-alex_tab_size = 8
+alex_tab_size = 4
 alex_base :: AlexAddr
 alex_base = AlexA#
   "\xf8\xff\xff\xff\xdc\xff\xff\xff\xf6\xff\xff\xff\x76\x00\x00\x00\xf6\x00\x00\x00\x67\x01\x00\x00\x00\x00\x00\x00\xe7\x01\x00\x00\x00\x00\x00\x00\x58\x02\x00\x00\x00\x00\x00\x00\x99\x02\x00\x00\x00\x00\x00\x00\xda\x02\x00\x00\xda\x03\x00\x00\x9a\x03\x00\x00\x00\x00\x00\x00\x6a\x04\x00\x00\xe5\x04\x00\x00\xa5\x04\x00\x00\x00\x00\x00\x00\x9b\x05\x00\x00\xd6\xff\xff\xff\x06\x00\x00\x00\x91\x06\x00\x00\xe4\xff\xff\xff\x08\x00\x00\x00\x09\x00\x00\x00\x88\x07\x00\x00\x9e\x05\x00\x00\x9f\x05\x00\x00\x7c\x05\x00\x00\x90\x05\x00\x00\xdb\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x6f\x06\x00\x00\x66\x07\x00\x00\x58\x08\x00\x00\xa3\x08\x00\x00\x00\x00\x00\x00\xee\x08\x00\x00\x39\x09\x00\x00\x00\x00\x00\x00\x84\x09\x00\x00\xcf\x09\x00\x00\x1a\x0a\x00\x00\x65\x0a\x00\x00\xb0\x0a\x00\x00\xfb\x0a\x00\x00\x46\x0b\x00\x00\x91\x0b\x00\x00\xdc\x0b\x00\x00\x27\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x72\x0c\x00\x00\xbd\x0c\x00\x00\x08\x0d\x00\x00\x53\x0d\x00\x00\x9e\x0d\x00\x00\xe9\x0d\x00\x00\x34\x0e\x00\x00\x7f\x0e\x00\x00\xca\x0e\x00\x00\x15\x0f\x00\x00\x60\x0f\x00\x00\xab\x0f\x00\x00\xf6\x0f\x00\x00\x41\x10\x00\x00\x8c\x10\x00\x00\xd7\x10\x00\x00\x22\x11\x00\x00\x6d\x11\x00\x00\xb8\x11\x00\x00\x03\x12\x00\x00\x4e\x12\x00\x00\x99\x12\x00\x00\xe4\x12\x00\x00\x2f\x13\x00\x00\x7a\x13\x00\x00\xc5\x13\x00\x00\x10\x14\x00\x00\x5b\x14\x00\x00\xa6\x14\x00\x00\xf1\x14\x00\x00\x3c\x15\x00\x00\x87\x15\x00\x00\xd2\x15\x00\x00\x1d\x16\x00\x00\x68\x16\x00\x00\xb3\x16\x00\x00\xfe\x16\x00\x00\x49\x17\x00\x00\x94\x17\x00\x00\xdf\x17\x00\x00\x2a\x18\x00\x00\x75\x18\x00\x00\xc0\x18\x00\x00\x0b\x19\x00\x00\x56\x19\x00\x00\xa1\x19\x00\x00\xec\x19\x00\x00\x37\x1a\x00\x00\x82\x1a\x00\x00\xcd\x1a\x00\x00\x18\x1b\x00\x00\x63\x1b\x00\x00\xae\x1b\x00\x00\xf9\x1b\x00\x00\x44\x1c\x00\x00\x8f\x1c\x00\x00\xda\x1c\x00\x00\x25\x1d\x00\x00\x70\x1d\x00\x00\xbb\x1d\x00\x00\x06\x1e\x00\x00\x51\x1e\x00\x00\x9c\x1e\x00\x00\xe7\x1e\x00\x00\x32\x1f\x00\x00\x7d\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd7\xff\xff\xff\x00\x00\x00\x00\xed\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9a\x04\x00\x00\x0d\x00\x00\x00\x00\x00\x00\x00\x9b\x04\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\xc0\x06\x00\x00\x00\x00\x00\x00\xf9\xff\xff\xff\x29\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x68\x04\x00\x00\x00\x00\x00\x00\x83\x04\x00\x00\x00\x00\x00\x00\x2e\x04\x00\x00\x00\x00\x00\x00\x88\x04\x00\x00\x00\x00\x00\x00\x70\x06\x00\x00\x00\x00\x00\x00\x89\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"#
